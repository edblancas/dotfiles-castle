{"id":283,"fid":283,"name":"Move Zeroes","slug":"move-zeroes","link":"https://leetcode.com/problems/move-zeroes/description/","percent":53.66383159631818,"level":"Easy","category":"algorithms","totalAC":"426.6K","totalSubmit":"795K","desc":"Given an array nums, write a function to move all 0's to the end of it while maintaining the relative order of the non-zero elements.\r\n\r\nExample:\r\n\r\n\r\nInput: [0,1,0,3,12]\r\nOutput: [1,3,12,0,0]\r\n\r\nNote:\r\n\r\n\r\n\tYou must do this in-place without making a copy of the array.\r\n\tMinimize the total number of operations.\r\n","templates":[{"value":"cpp","text":"C++","defaultCode":"class Solution {\r\npublic:\r\n    void moveZeroes(vector<int>& nums) {\r\n        \r\n    }\r\n};"},{"value":"java","text":"Java","defaultCode":"class Solution {\r\n    public void moveZeroes(int[] nums) {\r\n        \r\n    }\r\n}"},{"value":"python","text":"Python","defaultCode":"class Solution(object):\n    def moveZeroes(self, nums):\n        \"\"\"\n        :type nums: List[int]\n        :rtype: None Do not return anything, modify nums in-place instead.\n        \"\"\"\n        "},{"value":"python3","text":"Python3","defaultCode":"class Solution:\n    def moveZeroes(self, nums: List[int]) -> None:\n        \"\"\"\n        Do not return anything, modify nums in-place instead.\n        \"\"\"\n        "},{"value":"c","text":"C","defaultCode":"void moveZeroes(int* nums, int numsSize) {\r\n    \r\n}"},{"value":"csharp","text":"C#","defaultCode":"public class Solution {\r\n    public void MoveZeroes(int[] nums) {\r\n        \r\n    }\r\n}"},{"value":"javascript","text":"JavaScript","defaultCode":"/**\n * @param {number[]} nums\n * @return {void} Do not return anything, modify nums in-place instead.\n */\nvar moveZeroes = function(nums) {\n    \n};"},{"value":"ruby","text":"Ruby","defaultCode":"# @param {Integer[]} nums\n# @return {Void} Do not return anything, modify nums in-place instead.\ndef move_zeroes(nums)\n    \nend"},{"value":"swift","text":"Swift","defaultCode":"class Solution {\n    func moveZeroes(_ nums: inout [Int]) {\n\n    }\n}"},{"value":"golang","text":"Go","defaultCode":"func moveZeroes(nums []int)  {\n    \n}"},{"value":"scala","text":"Scala","defaultCode":"object Solution {\r\n    def moveZeroes(nums: Array[Int]): Unit = {\r\n        \r\n    }\r\n}"},{"value":"kotlin","text":"Kotlin","defaultCode":"class Solution {\n    fun moveZeroes(nums: IntArray): Unit {\n        \n    }\n}"},{"value":"rust","text":"Rust","defaultCode":"impl Solution {\n    pub fn move_zeroes(nums: &mut Vec<i32>) {\n        \n    }\n}"},{"value":"php","text":"PHP","defaultCode":"class Solution {\n\n    /**\n     * @param Integer[] $nums\n     * @return NULL\n     */\n    function moveZeroes(&$nums) {\n        \n    }\n}"}],"testcase":"[0,1,0,3,12]","testable":true,"templateMeta":{"name":"moveZeroes","params":[{"name":"nums","type":"integer[]"}],"return":{"type":"void"},"output":{"paramindex":0}}}